/*
Pushpinder Sekhon
251291426
March 28, 2023
The purpose of the lab is to create different methods to in order to multiply 2 matrices together, which are randomly generated by the user
*/


package Q1;//indicates package
import java.util.*;//imports scanner
import LA3Q.MyMethod;//imports MyMethod class
public class TwoDArrayMultiplication//indicates class
{
    public static int[][] populate2DArrays()//method used to populate 2d array with random numbers between 2 and 5
    {
        int[][] ma = new int[10][3];

        int[][] populatedArray = ma;//allows populatedArray reference variable to refer to ma values in heap

        int rows = populatedArray.length;//sets variable to length of array, number of rows in the array
        int columns = populatedArray[0].length;//sets variable to the length of the first row of populated array, number of columns in array

        for (int i = 0; i < rows; i++)//loop which runs through all the rows of the array
        {
            for (int j = 0; j < columns; j++)//loop which runs through the columns of the array
            {
                populatedArray[i][j] = (int)((Math.random()*4)+2);//uses random method to assign values from 2 to 5 to the array values
            }
        }
        return ma;
    }

    public static void display2DArrays(int[][] ma)//method which displays arrays
    {
        int[][] displayedArray = ma;//sets reference variable displayedArray to the same position as ma in the heap

        int rows = displayedArray.length;//sets variable rows equal to the length of the displayed array, the number of rows in that array
        int columns = displayedArray[0].length;//sets variable columns equal to the length of the first element of the array, the number of columns in the array

        for (int i = 0; i < rows; i++)//loop used to run through the number of rows of the array
        {
            for (int j = 0; j < columns; j++)//loop used to run through the number of columns of the array
            {
                System.out.printf("%3d", displayedArray[i][j]);//displays value of specific value in specific position of array
            }
            System.out.println();//prints new line
        }
    }

    public static int[][] multiplyArrays(int[][] a, int[][] b)//multiplies matrices
    {
        int rows1 = a.length;//sets variable rows1 to the length of the array a, the number of rows in this array
        int columns1 = a[0].length;//sets variable columns1 to the length of the first element of the array a, this is also the length of the first row of the array, this is also known as the columns
        int rows2 = b.length;//sets variable rows2 to the length of the array b, aka the number of rows in that array
        int columns2 = b[0].length;//sets variable columns2 to the length of the first element of the array b, this is the length of the first row, the length of the first row is the same as the number of columns in that row

        int[][] result = new int[rows1][columns2];//creates new reference variable for array with the number of rows of the first array and the number of columns of the second array, at this point the array contains only zeros


        for (int i = 0; i < result.length; i++)//this is a loop which will run through all the rows of the result array
        {
            for (int j = 0; j < result[i].length; j++)//this is a loop which will run through all the columns of the result array
            {
                int sum = 0;// this will set the sum to 0 so that is resets as we will multiply a different column and row, so the sum must be reset to 0 to facilitate this
                for (int k = 0; k < b.length; k++)// this will run through the number of rows in the second column, this will be the same as the number of rows in the first array, this is the number of elements that will be added together
                {

                    sum = sum + a[i][k]*b[k][j];// this statment will add the previous sum to the product of the multiplication of the two arrays at a certain point, the value k will correspond to the specific column of the first array and the row of the second array
                    // the value I will correspond to the row of the first array, and the value j will correspond to the column of the second array
                    // What this means is that the in a certain row of the first array and column of the second array, there will be a dot product conducted
                    //this will be done by going to the right in the first array and down the second array
                    //these numbers will be multiplied and all the sums will be added together

                }
                result[i][j] = sum;// this will set the value of that position of the result array, the position will be determined by the rows of the first array and the columns of the second array, the sum will be the dot product of the row of the first array and the column of the second
            }

        }
        return result;//returns the multiplied array
    }

    public static int[][] addArray(int[][] x,int [][] y)
    {
        int[][] array = x;
        int[][] array2 = y;

        int rows1 = x.length;
        int column1 = x[0].length;

        int rows2 = y.length;
        int column2 = y[0].length;


        int[][] result = new int[rows1][columns1];

        if ( rows1 != rows2 || column1 != column2)
        {
            System.out.print("array size not valid");
        }


        for (int i = 0; i < rows; i++)//loop used to run through the number of rows of the array
        {
            for (int j = 0; j < columns; j++)//loop used to run through the number of columns of the array
            {
                result[i][j] = x[i][j] + y[i][j];//displays value of specific value in specific position of array
            }
        return



    }

    public static void main(String[] args)//driver class
    {
        MyMethod.myHeader(4,1,"The purpose of the lab is to use 2 dimensional arrays to multiply matrices and generate and populate these matrices with random numbers");//prints header

        Scanner input = new Scanner(System.in);//brings in scanner reference variable

        System.out.println("Multiplying two 2D arrays:");//prints statement

        System.out.println("Enter Array1 info:");//prints statement
        System.out.print("Enter row size: ");//asks user for input
        int rows1 = input.nextInt();//sets the variable to the user input

        System.out.print("Enter column size: ");//asks user for input
        int columns1 = input.nextInt();//sets the variable to the user input

        System.out.println("Enter Array2 info:");//prints statement
        System.out.print("Enter row size: ");//asks user for input
        int rows2 = input.nextInt();//sets the variable to the user input
        while (rows2 != columns1)//loop which checks if the number of rows of the first array is the same as the number of columns of the second array
        {
            System.out.println("Row size of the 2nd matrix has to be equal to the column size of first matrix!");//prints statement
            System.out.print("Enter again: ");//asks user for input
            rows2 = input.nextInt();//sets the variable to the user input
        }

        System.out.print("Enter column size: ");//asks user for input
        int columns2 = input.nextInt();//sets the variable to the user input

        int[][] emptyArray1 = new int[rows1][columns1];//sets new reference variable for new array
        int[][] populatedArray1 = new int[rows1][columns1];//sets new reference variable for new array

        int[][] emptyArray2 = new int[rows2][columns2];//sets new reference variable for new array
        int[][] populatedArray2 = new int[rows2][columns2];//sets new reference variable for new array

        populate2DArrays(emptyArray1);//populates the array with random values
        populate2DArrays(emptyArray2);//populates the array with random values

        populatedArray1 = emptyArray1;//sets the populated array reference variable to the position of the empty array in the heap
        populatedArray2 = emptyArray2;//sets the populated array reference variable to the position of the empty array in the heap

        System.out.printf("Elements of Array 1, Size[%d x %d]:\n",rows1,columns1);//prints statement
        display2DArrays(populatedArray1);//populates the array with random values
        System.out.printf("Elements of Array 1, Size[%d x %d]:\n",rows2,columns2);//prints statement
        display2DArrays(populatedArray2);//populates the array with random values

        System.out.println("Multiplying two arrays [Array 1 x Array 2]");//prints statement
        System.out.printf("The resultant size is: [%d x %d]",rows1,columns2);//prints statement
        System.out.println("The elements are");//prints statement

        int[][] multipliedArray = new int[rows1][columns2];//sets new reference variable for new array
        multipliedArray = multiplyArrays(populatedArray1,populatedArray2);//multiplies array using previous arrays
        display2DArrays(multipliedArray);//prints multiplied array

        MyMethod.myFooter(1);//prints footer
    }

}
